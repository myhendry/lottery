/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "vrfCoordinatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_payable",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestedRandomNumber",
    type: "event",
  },
  {
    inputs: [],
    name: "endLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keyhash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestWinner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryState",
    outputs: [
      {
        internalType: "enum Lottery.LOTTERY_STATE",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200227838038062002278833981810160405281019062000037919062000296565b8383620000596200004d6200018560201b60201c565b6200018d60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506802b5e3af16b188000060038190555084600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460146101000a81548160ff0219169083600281111562000167577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081600581905550806006819055505050505050620003ae565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620002628162000360565b92915050565b60008151905062000279816200037a565b92915050565b600081519050620002908162000394565b92915050565b600080600080600060a08688031215620002af57600080fd5b6000620002bf8882890162000251565b9550506020620002d28882890162000251565b9450506040620002e58882890162000251565b9350506060620002f8888289016200027f565b92505060806200030b8882890162000268565b9150509295509295909350565b6000620003258262000336565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200036b8162000318565b81146200037757600080fd5b50565b62000385816200032c565b81146200039157600080fd5b50565b6200039f8162000356565b8114620003ab57600080fd5b50565b60805160601c60a05160601c611e97620003e1600039600081816109370152610ccd01526000610c910152611e976000f3fe6080604052600436106100f35760003560e01c80638b5b9ccc1161008a578063e70f65ac11610059578063e70f65ac146102be578063e97dcb62146102e9578063f2fde38b146102f3578063f71d96cb1461031c576100f3565b80638b5b9ccc146102145780638da5cb5b1461023f57806394985ddd1461026a578063ddca3f4314610293576100f3565b806316fe73ec116100c657806316fe73ec1461017c5780636939864b146101a757806369ebe78e146101d2578063715018a6146101fd576100f3565b806306ef53e0146100f857806309bc33a7146101235780631593a8c71461014e578063160344e214610165575b600080fd5b34801561010457600080fd5b5061010d610359565b60405161011a9190611883565b60405180910390f35b34801561012f57600080fd5b5061013861037f565b6040516101459190611aa2565b60405180910390f35b34801561015a57600080fd5b5061016361046b565b005b34801561017157600080fd5b5061017a610646565b005b34801561018857600080fd5b506101916107d7565b60405161019e9190611aa2565b60405180910390f35b3480156101b357600080fd5b506101bc6107dd565b6040516101c99190611987565b60405180910390f35b3480156101de57600080fd5b506101e76107f0565b6040516101f491906118fe565b60405180910390f35b34801561020957600080fd5b506102126107f6565b005b34801561022057600080fd5b5061022961087e565b60405161023691906118dc565b60405180910390f35b34801561024b57600080fd5b5061025461090c565b6040516102619190611868565b60405180910390f35b34801561027657600080fd5b50610291600480360381019061028c91906113b7565b610935565b005b34801561029f57600080fd5b506102a86109d1565b6040516102b59190611aa2565b60405180910390f35b3480156102ca57600080fd5b506102d36109d7565b6040516102e09190611aa2565b60405180910390f35b6102f16109dd565b005b3480156102ff57600080fd5b5061031a60048036038101906103159190611365565b610b4e565b005b34801561032857600080fd5b50610343600480360381019061033e91906113f3565b610c46565b6040516103509190611883565b60405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610422919061141c565b50505091505060006402540be4008261043b9190611baa565b9050600081670de0b6b3a76400006003546104569190611baa565b6104609190611b79565b905080935050505090565b610473610c85565b73ffffffffffffffffffffffffffffffffffffffff1661049161090c565b73ffffffffffffffffffffffffffffffffffffffff16146104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611a42565b60405180910390fd5b60006002811115610521577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460149054906101000a900460ff166002811115610569577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090611a22565b60405180910390fd5b6002600460146101000a81548160ff021916908360028111156105f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600061060a600654600554610c8d565b90507fc620a79baed7e5f06637aa5ab699c2b03ee40b2ae3ba4a91ed1eb0bd00b8ea3b8160405161063b91906118fe565b60405180910390a150565b61064e610c85565b73ffffffffffffffffffffffffffffffffffffffff1661066c61090c565b73ffffffffffffffffffffffffffffffffffffffff16146106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990611a42565b60405180910390fd5b600160028111156106fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460149054906101000a900460ff166002811115610744577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90611a62565b60405180910390fd5b6000600460146101000a81548160ff021916908360028111156107d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b60085481565b600460149054906101000a900460ff1681565b60065481565b6107fe610c85565b73ffffffffffffffffffffffffffffffffffffffff1661081c61090c565b73ffffffffffffffffffffffffffffffffffffffff1614610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611a42565b60405180910390fd5b61087c6000610dee565b565b6060600280548060200260200160405190810160405280929190818152602001828054801561090257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108b8575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba90611a82565b60405180910390fd5b6109cd8282610eb2565b5050565b60055481565b60035481565b60006002811115610a17577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460149054906101000a900460ff166002811115610a5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690611a22565b60405180910390fd5b610aa761037f565b341015610ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae0906119c2565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610b56610c85565b73ffffffffffffffffffffffffffffffffffffffff16610b7461090c565b73ffffffffffffffffffffffffffffffffffffffff1614610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190611a42565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c31906119a2565b60405180910390fd5b610c4381610dee565b50565b60028181548110610c5657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610d01929190611919565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610d2e9392919061189e565b602060405180830381600087803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d80919061138e565b506000610da38460003060016000898152602001908152602001600020546111bc565b9050600180600086815260200190815260200160002054610dc49190611b23565b6001600086815260200190815260200160002081905550610de584826111f8565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600280811115610eeb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460149054906101000a900460ff166002811115610f33577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a90611a02565b60405180910390fd5b60008111610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad906119e2565b60405180910390fd5b600060028054905082610fc99190611cf4565b905060028181548110611005577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156110d8573d6000803e3d6000fd5b50600067ffffffffffffffff81111561111a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111485781602001602082028036833780820191505090505b506002908051906020019061115e92919061122b565b506001600460146101000a81548160ff021916908360028111156111ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081600881905550505050565b6000848484846040516020016111d59493929190611942565b6040516020818303038152906040528051906020012060001c9050949350505050565b6000828260405160200161120d92919061183c565b60405160208183030381529060405280519060200120905092915050565b8280548282559060005260206000209081019282156112a4579160200282015b828111156112a35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061124b565b5b5090506112b191906112b5565b5090565b5b808211156112ce5760008160009055506001016112b6565b5090565b6000813590506112e181611dd7565b92915050565b6000815190506112f681611dee565b92915050565b60008135905061130b81611e05565b92915050565b60008151905061132081611e1c565b92915050565b60008135905061133581611e33565b92915050565b60008151905061134a81611e33565b92915050565b60008151905061135f81611e4a565b92915050565b60006020828403121561137757600080fd5b6000611385848285016112d2565b91505092915050565b6000602082840312156113a057600080fd5b60006113ae848285016112e7565b91505092915050565b600080604083850312156113ca57600080fd5b60006113d8858286016112fc565b92505060206113e985828601611326565b9150509250929050565b60006020828403121561140557600080fd5b600061141384828501611326565b91505092915050565b600080600080600060a0868803121561143457600080fd5b600061144288828901611350565b955050602061145388828901611311565b94505060406114648882890161133b565b93505060606114758882890161133b565b925050608061148688828901611350565b9150509295509295909350565b600061149f83836114ab565b60208301905092915050565b6114b481611c16565b82525050565b6114c381611c16565b82525050565b6114d281611c04565b82525050565b60006114e382611acd565b6114ed8185611af0565b93506114f883611abd565b8060005b838110156115295781516115108882611493565b975061151b83611ae3565b9250506001810190506114fc565b5085935050505092915050565b61153f81611c34565b82525050565b61155661155182611c34565b611ce0565b82525050565b600061156782611ad8565b6115718185611b01565b9350611581818560208601611cad565b61158a81611db2565b840191505092915050565b61159e81611c9b565b82525050565b60006115b1602683611b12565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611617602783611b12565b91507f496e73756666696369656e742066756e647320746f20656e746572207468652060008301527f6c6f7474657279000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061167d601e83611b12565b91507f412072616e646f6d206e756d62657220776173206e6f7420666f756e642e00006000830152602082019050919050565b60006116bd602f83611b12565b91507f4c6f7474657279206973206e6f7420696e207468652063616c63756c6174696e60008301527f672077696e6e65722073746174652e00000000000000000000000000000000006020830152604082019050919050565b6000611723601483611b12565b91507f4c6f7474657279206973206e6f74206f70656e2e0000000000000000000000006000830152602082019050919050565b6000611763602083611b12565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006117a3601883611b12565b91507f4c6f747465727920697320616c7265616479206f70656e2e00000000000000006000830152602082019050919050565b60006117e3601f83611b12565b91507f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006000830152602082019050919050565b61181f81611c7b565b82525050565b61183661183182611c7b565b611cea565b82525050565b60006118488285611545565b6020820191506118588284611825565b6020820191508190509392505050565b600060208201905061187d60008301846114c9565b92915050565b600060208201905061189860008301846114ba565b92915050565b60006060820190506118b360008301866114c9565b6118c06020830185611816565b81810360408301526118d2818461155c565b9050949350505050565b600060208201905081810360008301526118f681846114d8565b905092915050565b60006020820190506119136000830184611536565b92915050565b600060408201905061192e6000830185611536565b61193b6020830184611816565b9392505050565b60006080820190506119576000830187611536565b6119646020830186611816565b61197160408301856114c9565b61197e6060830184611816565b95945050505050565b600060208201905061199c6000830184611595565b92915050565b600060208201905081810360008301526119bb816115a4565b9050919050565b600060208201905081810360008301526119db8161160a565b9050919050565b600060208201905081810360008301526119fb81611670565b9050919050565b60006020820190508181036000830152611a1b816116b0565b9050919050565b60006020820190508181036000830152611a3b81611716565b9050919050565b60006020820190508181036000830152611a5b81611756565b9050919050565b60006020820190508181036000830152611a7b81611796565b9050919050565b60006020820190508181036000830152611a9b816117d6565b9050919050565b6000602082019050611ab76000830184611816565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611b2e82611c7b565b9150611b3983611c7b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b6e57611b6d611d25565b5b828201905092915050565b6000611b8482611c7b565b9150611b8f83611c7b565b925082611b9f57611b9e611d54565b5b828204905092915050565b6000611bb582611c7b565b9150611bc083611c7b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611bf957611bf8611d25565b5b828202905092915050565b6000611c0f82611c5b565b9050919050565b6000611c2182611c5b565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611c4c82611dc3565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000611ca682611c3e565b9050919050565b60005b83811015611ccb578082015181840152602081019050611cb0565b83811115611cda576000848401525b50505050565b6000819050919050565b6000819050919050565b6000611cff82611c7b565b9150611d0a83611c7b565b925082611d1a57611d19611d54565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60038110611dd457611dd3611d83565b5b50565b611de081611c04565b8114611deb57600080fd5b50565b611df781611c28565b8114611e0257600080fd5b50565b611e0e81611c34565b8114611e1957600080fd5b50565b611e2581611c51565b8114611e3057600080fd5b50565b611e3c81611c7b565b8114611e4757600080fd5b50565b611e5381611c85565b8114611e5e57600080fd5b5056fea264697066735822122026d1ba35d99567a64b48e756799908a566c7f6f19186b5b95599dbd769bce62764736f6c63430008000033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lottery";
  }

  deploy(
    priceFeedAddress: string,
    vrfCoordinatorAddress: string,
    linkAddress: string,
    fee_payable: BigNumberish,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(
      priceFeedAddress,
      vrfCoordinatorAddress,
      linkAddress,
      fee_payable,
      keyHash,
      overrides || {}
    ) as Promise<Lottery>;
  }
  getDeployTransaction(
    priceFeedAddress: string,
    vrfCoordinatorAddress: string,
    linkAddress: string,
    fee_payable: BigNumberish,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      priceFeedAddress,
      vrfCoordinatorAddress,
      linkAddress,
      fee_payable,
      keyHash,
      overrides || {}
    );
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly contractName: "Lottery";
  public readonly contractName: "Lottery";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
